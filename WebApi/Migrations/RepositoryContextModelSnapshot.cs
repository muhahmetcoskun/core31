// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repositories.EFCore;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("PGMBilgiSistemi")
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books", "PGMBilgiSistemi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Price = 75m,
                            Title = "Karagöz ve Hacivat"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Price = 175m,
                            Title = "Mesnevi"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Price = 375m,
                            Title = "Devlet"
                        });
                });

            modelBuilder.Entity("Entities.Models.CalismaGrubu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int>("HaftaTatiliGunu")
                        .HasColumnType("integer");

                    b.Property<int>("HaftalikCalismaSuresi")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("OOMesaiBaslamaSaati")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("OOMesaiBitisSaati")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("OSMesaiBaslamaSaati")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("OSMesaiBitisSaati")
                        .HasColumnType("time without time zone");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("YemekMolasiBaslamaSaati")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("YemekMolasiBitisSaati")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.ToTable("CalismaGrubus", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", "PGMBilgiSistemi");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Computer Science"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Network"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Database Management Systems"
                        });
                });

            modelBuilder.Entity("Entities.Models.GunlukCalismaSuresi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int>("SiraNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SiraNo")
                        .IsUnique();

                    b.ToTable("GunlukCalismaSuresies", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.KategoriTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KategoriTipies", "PGMBilgiSistemi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "Ücretli İzin"
                        },
                        new
                        {
                            Id = 2,
                            Adi = "Ücretsiz İzin"
                        },
                        new
                        {
                            Id = 3,
                            Adi = "Sağlık"
                        },
                        new
                        {
                            Id = 4,
                            Adi = "Diğer"
                        });
                });

            modelBuilder.Entity("Entities.Models.PersonelPrim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<int>("PrimTuruId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PrimTuruId");

                    b.ToTable("PersonelPrims", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.PrimTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int>("SiraNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SiraNo")
                        .IsUnique();

                    b.ToTable("PrimTurus", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.Puantaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BaslangicDonem")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("BitisDonem")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("KapamaTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Puantajs", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.PuantajTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PuantajTurus", "PGMBilgiSistemi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "Aylık Maaş Puantajı"
                        },
                        new
                        {
                            Id = 2,
                            Adi = "İptal Puantajı"
                        },
                        new
                        {
                            Id = 3,
                            Adi = "Ek Puantaj"
                        },
                        new
                        {
                            Id = 4,
                            Adi = "İlave Tediye Puantajı"
                        },
                        new
                        {
                            Id = 5,
                            Adi = "Akdi İkramiye Puantajı"
                        },
                        new
                        {
                            Id = 6,
                            Adi = "Ek Ödeme Puantajı"
                        },
                        new
                        {
                            Id = 7,
                            Adi = "Yıllık Ücretli İzin Puantajı"
                        },
                        new
                        {
                            Id = 8,
                            Adi = "Hastalık Yardımı Puantajı"
                        },
                        new
                        {
                            Id = 9,
                            Adi = "Tis Farkı Puantajı"
                        });
                });

            modelBuilder.Entity("Entities.Models.PuantajVeriGirisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("Dayanak")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KategoriTipiId")
                        .HasColumnType("integer");

                    b.Property<string>("Simge")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VeriGirisi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KategoriTipiId");

                    b.ToTable("PuantajVeriGirisies", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.ResmiTatil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ResmiTatils", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", "PGMBilgiSistemi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "c4b93d15-dafb-4254-a5ac-a5b545d38cb5",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "6d46c39a-b327-4f37-abb8-7a3234e4906f",
                            Name = "Editor",
                            NormalizedName = "EDITOR"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "16051b02-627c-4cd9-9a55-ad3684f89f04",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.Uygulama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Uygulamas", "PGMBilgiSistemi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "Puantaj"
                        },
                        new
                        {
                            Id = 2,
                            Adi = "İşçi Bilgi"
                        },
                        new
                        {
                            Id = 3,
                            Adi = "Test 1"
                        },
                        new
                        {
                            Id = 4,
                            Adi = "Test 2"
                        });
                });

            modelBuilder.Entity("Entities.Models.UygulamaYetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("UygulamaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId");

                    b.HasIndex("UygulamaId");

                    b.ToTable("UygulamaYetkies", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "PGMBilgiSistemi");
                });

            modelBuilder.Entity("Entities.Models.Book", b =>
                {
                    b.HasOne("Entities.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entities.Models.PersonelPrim", b =>
                {
                    b.HasOne("Entities.Models.PrimTuru", "PrimTuru")
                        .WithMany()
                        .HasForeignKey("PrimTuruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimTuru");
                });

            modelBuilder.Entity("Entities.Models.PuantajVeriGirisi", b =>
                {
                    b.HasOne("Entities.Models.KategoriTipi", "KategoriTipi")
                        .WithMany()
                        .HasForeignKey("KategoriTipiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KategoriTipi");
                });

            modelBuilder.Entity("Entities.Models.UserRole", b =>
                {
                    b.HasOne("Entities.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.UygulamaYetki", b =>
                {
                    b.HasOne("Entities.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Uygulama", "Uygulama")
                        .WithMany()
                        .HasForeignKey("UygulamaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");

                    b.Navigation("Uygulama");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Entities.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Entities.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
